<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-10-27T08:26:10+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">(Re)discovering the code</title><subtitle>Programming blog of Hannupekka Sormunen.</subtitle><entry><title type="html">Keeping on keeping on</title><link href="http://localhost:4000/programming/2018/10/26/Keeping-on-keeping-on.html" rel="alternate" type="text/html" title="Keeping on keeping on" /><published>2018-10-26T00:00:00+03:00</published><updated>2018-10-26T00:00:00+03:00</updated><id>http://localhost:4000/programming/2018/10/26/Keeping%20on%20keeping%20on</id><content type="html" xml:base="http://localhost:4000/programming/2018/10/26/Keeping-on-keeping-on.html">&lt;p&gt;After last blog post I have kept “attending” &lt;a href=&quot;https://www.udemy.com/free-learn-c-tutorial-beginners/learn/v4/content&quot;&gt;C++ Tutorial for Complete Beginners&lt;/a&gt; course. During my studies I have found out that I still have the ability to think like a programmer. Meaning, that I have been able to do much more than is required on current lesson and expand my learning with things from the past. &lt;!--more--&gt; For example, when there was lesson about conditions where the lecturer suggested, that after his you should try to do program that does certain &lt;a href=&quot;https://en.wikipedia.org/wiki/Multiplication_table&quot;&gt;multiplication table&lt;/a&gt; using an &lt;a href=&quot;http://www.cplusplus.com/doc/tutorial/arrays/&quot;&gt;C++ standard array&lt;/a&gt; and set values. Instead of hard coding the values to the code itself, I wrote a little program that asks from user how long multiplication table is needed and what number should be multiplied. Example code is below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iUserTableInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iUserInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Input how long of a multiplication table do you need &amp;gt; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iUserTableInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Input which number you want to multiples of &amp;gt; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iUserInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iMultiplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iUserTableInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// +1 to make sure that there are enough memory allocated to array. &lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iLoop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iLoop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iUserTableInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iLoop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;iMultiplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iLoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iUserInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iLoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iLoop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; times &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iUserInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iMultiplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iLoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As seen on the little program above, my current lessons have been covering loops and how to implement them to a program. To make sure that I understand how each of them works I decided to look up the differences between &lt;a href=&quot;https://en.wikiversity.org/wiki/C%2B%2B/Loops&quot;&gt;for-, do while- and while-loops&lt;/a&gt; and even went, and couple draw flowcharts of loops to visualize what happens in different loops. I used application called &lt;a href=&quot;https://pencil.evolus.vn/&quot;&gt;Pencil&lt;/a&gt; to draw and the charts are presented below.&lt;/p&gt;

&lt;p&gt;For- and while-loop are pretty much the same when put in a simplest flowchart form:
&lt;img src=&quot;/assets/for_while_loop.png&quot; alt=&quot;For- and Do while-loops&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Do while loop does it differently, since it runs the code always atleast once. Here it is in a flowchart:
&lt;img src=&quot;/assets/do_while_loop.png&quot; alt=&quot;For- and Do while-loops&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I also read about what are the major differences between each of these loops and when should programmer select which to use, and came to conclusion that it all depends on the circumstances. My favourite anecdote was that each of these are tools for different situation in the same way as the tools in carpenters toolbox. There are several ways to hammer down a nail, but the most elegant and easiest way to use the &lt;strong&gt;hammer&lt;/strong&gt; rather than &lt;strong&gt;wrench&lt;/strong&gt;. Some programmers may dislike do while loop because it creates confusion. After I have more experience in a matter, I think I will continue using each of the tools provided to find the best solution to each of problems presented to me.&lt;/p&gt;

&lt;p&gt;This time I decided to list all the new things that I have learned since my last blog post and comment them a little bit. There haven’t been a lot of completely new things but I still think that using the beginners course as a refresher is a good idea. I have never felt bored, but rather intrigued to find out that I still can remember all the basics. When I decided to change my career path some of the people who I told about my next move told me that returning to something that I have already done before is like riding a bicycle after all these years. You never really forget it all. After almost couple of weeks of setting up development environment to myself and starting to write programs I kind of agree with that sentiment. Anyways, here are the things that were something new to me, or made me do additional digging around the Internet:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Header called &lt;a href=&quot;http://www.cplusplus.com/reference/iomanip/&quot;&gt;iomanip&lt;/a&gt; provides parametric manipulators such as:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/iomanip/setprecision/&quot;&gt;setprecision&lt;/a&gt; which include setting decimal precision of floating point values.&lt;/li&gt;
      &lt;li&gt;I have never really written programs that need floating point values to be this precise and thus haven’t really need these before. After learning about these I’m pretty sure I will use them later on.&lt;/li&gt;
      &lt;li&gt;I will share another code about floating point values after this list.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/cwchar/wchar_t/&quot;&gt;wchar_t&lt;/a&gt; which is used in UTF-16 text encoding.
    &lt;ul&gt;
      &lt;li&gt;Altough it should be never used. See &lt;a href=&quot;http://utf8everywhere.org/&quot;&gt;utf8everywhere&lt;/a&gt; which state: “Do not use wchar_t or std::wstring in any place other than adjacent point to APIs accepting UTF-16.” I think knowing that this is might be handy when coming across legacy systems in Windows environment that had to use old UTF-16/Unicode encoding. Learning bit of history never hurts :)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Declaring variables at the beginning of the program vs. declaring them when you really need variables in a program.
    &lt;ul&gt;
      &lt;li&gt;This is something that I have been thinking myself alot when I started all those years ago and when I heard about it again during one of the lessons I thought immediately this is something I should write about.&lt;/li&gt;
      &lt;li&gt;It seems that declaring all the variables at the beginning of the program was something that was done in the old days, when compiler standards where different. However it also depends on the used language. I will keep digging around and come back to this point later when I have found more information to back up one theory over another.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One last piece of new information was comparing floating point values and I learned that that it is like comparing height of two people, as in one person can very rarely be &lt;em&gt;exactly&lt;/em&gt; same height with another person, even when they might look as tall. Example code below shows one way to compare floating point values.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fValue1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fValue1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;equals&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;not equal&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next up on the course is going to be more advanced programming such as object oriented coding, inheritance and pointers. Can’t hardly wait. Until next time!&lt;/p&gt;

&lt;p&gt;-sorhanp&lt;/p&gt;</content><author><name></name></author><summary type="html">After last blog post I have kept “attending” C++ Tutorial for Complete Beginners course. During my studies I have found out that I still have the ability to think like a programmer. Meaning, that I have been able to do much more than is required on current lesson and expand my learning with things from the past.</summary></entry><entry><title type="html">New beginnings</title><link href="http://localhost:4000/programming/2018/10/22/New-beginnings.html" rel="alternate" type="text/html" title="New beginnings" /><published>2018-10-22T00:00:00+03:00</published><updated>2018-10-22T00:00:00+03:00</updated><id>http://localhost:4000/programming/2018/10/22/New%20beginnings</id><content type="html" xml:base="http://localhost:4000/programming/2018/10/22/New-beginnings.html">&lt;p&gt;As stated in my &lt;a href=&quot;/programming/2018/10/19/My-first-post.html&quot;&gt;previous&lt;/a&gt; blog post I have most experience in software development using C++ -programming language, meaning I still possess some kind of basic understanding of language in question. Because of that I decided that should start my journey from the basics of C++ as a refresher.&lt;!--more--&gt; In my opinion, it is never waste of time to start from the beginning, just to make sure that there is nothing that one have forgotten. I think it will later reduce my frustration when I face some obstacle that I could have overcome easily, if I had refreshed my memory about the basics.&lt;/p&gt;

&lt;p&gt;Luckily finding courses that provide one with absolute basics of programming are available far and wide online. For example a simple “best courses to learn C++” Internet-search provides a lot of good pointers where to begin. My first results where &lt;a href=&quot;https://digitaldefynd.com/best-c-plus-plus-tutorial-course-certification/&quot;&gt;Digitaldefynd&lt;/a&gt; and &lt;a href=&quot;http://www.java67.com/2018/02/5-free-cpp-courses-to-learn-programming.html&quot;&gt;Java67&lt;/a&gt;.
which both provide nice and simple list that provide nice overview of the courses featured. Digitaldefynd ones were mostly about paid courses at &lt;a href=&quot;https://www.udemy.com/&quot;&gt;Udemy&lt;/a&gt; online learning portal. Java67 also provided Udemy-course that &lt;a href=&quot;https://www.udemy.com/free-learn-c-tutorial-beginners/learn/v4/content&quot;&gt;caught my eye&lt;/a&gt; with the line: “can be completed with any C++ IDE and compiler“ as mentioned previously I’m running virtual machine with Arch Linux on it. so there no need to setup any new software and I’m able to jump right in to the course. For future I also found out about Microsoft edX-courses &lt;a href=&quot;https://www.edx.org/course/introduction-c-plus-plus-1?source=aw&amp;amp;awc=6798_1540143660_f3142dbcdbb9302121655eafcec940d3&quot;&gt;Introduction&lt;/a&gt;, &lt;a href=&quot;https://www.edx.org/course/intermediate-c-plus-plus-1?source=aw&amp;amp;awc=6798_1540143661_799ecc6f62e0efa70030b0e80cfb8664&quot;&gt;Intermediate&lt;/a&gt; and &lt;a href=&quot;https://www.edx.org/course/advanced-c-plus-plus-1?source=aw&amp;amp;awc=6798_1540143661_0667aed070e84398f6a426513fc755c2&quot;&gt;Advanced&lt;/a&gt;, which I will check out later, when I want to learn about &lt;a href=&quot;https://visualstudio.microsoft.com/&quot;&gt;Microsoft Visual Studio&lt;/a&gt; IDE.&lt;/p&gt;

&lt;p&gt;So I started C++ Tutorial for Complete Beginners and straight away the course lecturer informs that C++ is perfect for AI-applications, which is one of the reasons why I decided that it is my time to start learning programming again. I got my inspiration from &lt;a href=&quot;http://www.elementsofai.com/fi&quot;&gt;Elements of AI&lt;/a&gt; online course which I completed this September. I was happy to notice, that after of couple of introductory lectures I was already writing lines of code like I used to all those years ago. It felt really nice to start making my own programs along with instructions from lecturer. At one point I even went and checked out my old material from around seven years ago. That is, because during the course I had a flashback about &lt;a href=&quot;https://en.wikipedia.org/wiki/Makefile&quot;&gt;Makefiles&lt;/a&gt; and &lt;a href=&quot;http://web.mst.edu/~cpp/common/hungarian.html&quot;&gt;Hungarian Notation&lt;/a&gt;, so that I could include these at the very beginning and add something from the past to current learning process. I have also learned something new like &lt;a href=&quot;http://www.cplusplus.com/reference/climits/&quot;&gt;limits.h or climits&lt;/a&gt; and &lt;a href=&quot;http://www.cplusplus.com/reference/ostream/ostream/flush/&quot;&gt;flush&lt;/a&gt; that were previously not taught to me.&lt;/p&gt;

&lt;p&gt;So after all that my current plan is that I go through the C++ Tutorial for Complete Beginners daily and then before bedtime I will rehearse what I have just learned with &lt;a href=&quot;https://www.sololearn.com/&quot;&gt;Sololearn&lt;/a&gt; mobile app that I found for my Android phone that doesn’t need a own compiler installed.&lt;/p&gt;

&lt;p&gt;As the lecturer said, when finishing his courses: Happy coding!&lt;/p&gt;

&lt;p&gt;-sorhanp&lt;/p&gt;</content><author><name></name></author><summary type="html">As stated in my previous blog post I have most experience in software development using C++ -programming language, meaning I still possess some kind of basic understanding of language in question. Because of that I decided that should start my journey from the basics of C++ as a refresher.</summary></entry><entry><title type="html">My first post!</title><link href="http://localhost:4000/programming/2018/10/19/My-first-post.html" rel="alternate" type="text/html" title="My first post!" /><published>2018-10-19T00:00:00+03:00</published><updated>2018-10-19T00:00:00+03:00</updated><id>http://localhost:4000/programming/2018/10/19/My%20first%20post</id><content type="html" xml:base="http://localhost:4000/programming/2018/10/19/My-first-post.html">&lt;p&gt;17th of October marks the day when my employment contract in a contact center ended and I started a new, or rather continued, my career path towards mastering the art of programming. &lt;!--more--&gt;For the last six and a half year I have worked my way up in a company, that doesn’t have anything to do with software development. Still, I managed to gain experience in leadership, teamwork and ability to work with different kind of people. Most importantly working as a team supervisor at a contact center made me realize that I should keep developing my previously acquired skills in computer science so that I can keep pursuing my dreams.&lt;/p&gt;

&lt;p&gt;In my &lt;a href=&quot;/about/&quot;&gt;About&lt;/a&gt;-page I describe that this blog is my learning diary in my journey to gaining something completely new for my life. I have made preparations to start my learning. I’m currently running Windows operating system and all my past experience in programming has been on C++ programming language using Linux operating system. So I decided that instead of installing  another operating system to my computer or installing necessary programs to Windows (Bash shell etc.). I chose &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt;. &lt;img src=&quot;/assets/virtualbox.png&quot; alt=&quot;VirtualBox&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I found virtualization the best way to begin, because I can test different distros easily and found the one that is best suited for my needs, and likewise do the same with programming tools.&lt;/p&gt;

&lt;p&gt;For my first Linux distro I selected &lt;a href=&quot;https://www.archlinux.org/&quot;&gt;Arch Linux&lt;/a&gt; with Plasma desktop environment by KDE:
&lt;img src=&quot;/assets/arch.png&quot; alt=&quot;Arch Linux&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After couple of weeks of testing I’m currently very happy with this environment and have decided to go ahead and start developing my skills with this configuration. I will report if I have made any changes to my configuration. I will dedicate my next post telling about what kind of materials I have been checking out and which programming courses I will attend next. Stay tuned!&lt;/p&gt;

&lt;p&gt;-sorhanp&lt;/p&gt;</content><author><name></name></author><summary type="html">17th of October marks the day when my employment contract in a contact center ended and I started a new, or rather continued, my career path towards mastering the art of programming.</summary></entry></feed>